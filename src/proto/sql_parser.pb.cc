// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sql_parser.proto

#include "sql_parser.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace cpluscplustemplate {
class ParseSQLRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParseSQLRequest>
      _instance;
} _ParseSQLRequest_default_instance_;
class ParseSQLResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParseSQLResponse>
      _instance;
} _ParseSQLResponse_default_instance_;
}  // namespace cpluscplustemplate
namespace protobuf_sql_5fparser_2eproto {
static void InitDefaultsParseSQLRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cpluscplustemplate::_ParseSQLRequest_default_instance_;
    new (ptr) ::cpluscplustemplate::ParseSQLRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cpluscplustemplate::ParseSQLRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParseSQLRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParseSQLRequest}, {}};

static void InitDefaultsParseSQLResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cpluscplustemplate::_ParseSQLResponse_default_instance_;
    new (ptr) ::cpluscplustemplate::ParseSQLResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cpluscplustemplate::ParseSQLResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParseSQLResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParseSQLResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ParseSQLRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParseSQLResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cpluscplustemplate::ParseSQLRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cpluscplustemplate::ParseSQLRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cpluscplustemplate::ParseSQLRequest, sql_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cpluscplustemplate::ParseSQLResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cpluscplustemplate::ParseSQLResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cpluscplustemplate::ParseSQLResponse, ast_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::cpluscplustemplate::ParseSQLRequest)},
  { 7, 13, sizeof(::cpluscplustemplate::ParseSQLResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::cpluscplustemplate::_ParseSQLRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cpluscplustemplate::_ParseSQLResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "sql_parser.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020sql_parser.proto\022\022cpluscplustemplate\"\036"
      "\n\017ParseSQLRequest\022\013\n\003sql\030\001 \001(\t\"\037\n\020ParseS"
      "QLResponse\022\013\n\003ast\030\001 \001(\t2g\n\016ParseSQLServe"
      "r\022U\n\010ParseSQL\022#.cpluscplustemplate.Parse"
      "SQLRequest\032$.cpluscplustemplate.ParseSQL"
      "ResponseB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 213);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sql_parser.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sql_5fparser_2eproto
namespace cpluscplustemplate {

// ===================================================================

void ParseSQLRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParseSQLRequest::kSqlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParseSQLRequest::ParseSQLRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sql_5fparser_2eproto::scc_info_ParseSQLRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cpluscplustemplate.ParseSQLRequest)
}
ParseSQLRequest::ParseSQLRequest(const ParseSQLRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sql()) {
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
  // @@protoc_insertion_point(copy_constructor:cpluscplustemplate.ParseSQLRequest)
}

void ParseSQLRequest::SharedCtor() {
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ParseSQLRequest::~ParseSQLRequest() {
  // @@protoc_insertion_point(destructor:cpluscplustemplate.ParseSQLRequest)
  SharedDtor();
}

void ParseSQLRequest::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParseSQLRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParseSQLRequest::descriptor() {
  ::protobuf_sql_5fparser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fparser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParseSQLRequest& ParseSQLRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sql_5fparser_2eproto::scc_info_ParseSQLRequest.base);
  return *internal_default_instance();
}


void ParseSQLRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cpluscplustemplate.ParseSQLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sql_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParseSQLRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cpluscplustemplate.ParseSQLRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sql = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), static_cast<int>(this->sql().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cpluscplustemplate.ParseSQLRequest.sql");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cpluscplustemplate.ParseSQLRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cpluscplustemplate.ParseSQLRequest)
  return false;
#undef DO_
}

void ParseSQLRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cpluscplustemplate.ParseSQLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cpluscplustemplate.ParseSQLRequest.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cpluscplustemplate.ParseSQLRequest)
}

::google::protobuf::uint8* ParseSQLRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cpluscplustemplate.ParseSQLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sql = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), static_cast<int>(this->sql().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cpluscplustemplate.ParseSQLRequest.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cpluscplustemplate.ParseSQLRequest)
  return target;
}

size_t ParseSQLRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cpluscplustemplate.ParseSQLRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParseSQLRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cpluscplustemplate.ParseSQLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ParseSQLRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParseSQLRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cpluscplustemplate.ParseSQLRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cpluscplustemplate.ParseSQLRequest)
    MergeFrom(*source);
  }
}

void ParseSQLRequest::MergeFrom(const ParseSQLRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cpluscplustemplate.ParseSQLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sql()) {
    set_has_sql();
    sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
  }
}

void ParseSQLRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cpluscplustemplate.ParseSQLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParseSQLRequest::CopyFrom(const ParseSQLRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cpluscplustemplate.ParseSQLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseSQLRequest::IsInitialized() const {
  return true;
}

void ParseSQLRequest::Swap(ParseSQLRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParseSQLRequest::InternalSwap(ParseSQLRequest* other) {
  using std::swap;
  sql_.Swap(&other->sql_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParseSQLRequest::GetMetadata() const {
  protobuf_sql_5fparser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fparser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ParseSQLResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParseSQLResponse::kAstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParseSQLResponse::ParseSQLResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sql_5fparser_2eproto::scc_info_ParseSQLResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cpluscplustemplate.ParseSQLResponse)
}
ParseSQLResponse::ParseSQLResponse(const ParseSQLResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ast_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ast()) {
    ast_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ast_);
  }
  // @@protoc_insertion_point(copy_constructor:cpluscplustemplate.ParseSQLResponse)
}

void ParseSQLResponse::SharedCtor() {
  ast_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ParseSQLResponse::~ParseSQLResponse() {
  // @@protoc_insertion_point(destructor:cpluscplustemplate.ParseSQLResponse)
  SharedDtor();
}

void ParseSQLResponse::SharedDtor() {
  ast_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParseSQLResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParseSQLResponse::descriptor() {
  ::protobuf_sql_5fparser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fparser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParseSQLResponse& ParseSQLResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sql_5fparser_2eproto::scc_info_ParseSQLResponse.base);
  return *internal_default_instance();
}


void ParseSQLResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cpluscplustemplate.ParseSQLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ast_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParseSQLResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cpluscplustemplate.ParseSQLResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ast = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ast()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ast().data(), static_cast<int>(this->ast().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cpluscplustemplate.ParseSQLResponse.ast");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cpluscplustemplate.ParseSQLResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cpluscplustemplate.ParseSQLResponse)
  return false;
#undef DO_
}

void ParseSQLResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cpluscplustemplate.ParseSQLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ast = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ast().data(), static_cast<int>(this->ast().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cpluscplustemplate.ParseSQLResponse.ast");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ast(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cpluscplustemplate.ParseSQLResponse)
}

::google::protobuf::uint8* ParseSQLResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cpluscplustemplate.ParseSQLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ast = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ast().data(), static_cast<int>(this->ast().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cpluscplustemplate.ParseSQLResponse.ast");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ast(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cpluscplustemplate.ParseSQLResponse)
  return target;
}

size_t ParseSQLResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cpluscplustemplate.ParseSQLResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string ast = 1;
  if (has_ast()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ast());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParseSQLResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cpluscplustemplate.ParseSQLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ParseSQLResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParseSQLResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cpluscplustemplate.ParseSQLResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cpluscplustemplate.ParseSQLResponse)
    MergeFrom(*source);
  }
}

void ParseSQLResponse::MergeFrom(const ParseSQLResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cpluscplustemplate.ParseSQLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ast()) {
    set_has_ast();
    ast_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ast_);
  }
}

void ParseSQLResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cpluscplustemplate.ParseSQLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParseSQLResponse::CopyFrom(const ParseSQLResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cpluscplustemplate.ParseSQLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseSQLResponse::IsInitialized() const {
  return true;
}

void ParseSQLResponse::Swap(ParseSQLResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParseSQLResponse::InternalSwap(ParseSQLResponse* other) {
  using std::swap;
  ast_.Swap(&other->ast_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParseSQLResponse::GetMetadata() const {
  protobuf_sql_5fparser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sql_5fparser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ParseSQLServer::~ParseSQLServer() {}

const ::google::protobuf::ServiceDescriptor* ParseSQLServer::descriptor() {
  protobuf_sql_5fparser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sql_5fparser_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* ParseSQLServer::GetDescriptor() {
  return descriptor();
}

void ParseSQLServer::ParseSQL(::google::protobuf::RpcController* controller,
                         const ::cpluscplustemplate::ParseSQLRequest*,
                         ::cpluscplustemplate::ParseSQLResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ParseSQL() not implemented.");
  done->Run();
}

void ParseSQLServer::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_sql_5fparser_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      ParseSQL(controller,
             ::google::protobuf::down_cast<const ::cpluscplustemplate::ParseSQLRequest*>(request),
             ::google::protobuf::down_cast< ::cpluscplustemplate::ParseSQLResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& ParseSQLServer::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::cpluscplustemplate::ParseSQLRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& ParseSQLServer::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::cpluscplustemplate::ParseSQLResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

ParseSQLServer_Stub::ParseSQLServer_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ParseSQLServer_Stub::ParseSQLServer_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
ParseSQLServer_Stub::~ParseSQLServer_Stub() {
  if (owns_channel_) delete channel_;
}

void ParseSQLServer_Stub::ParseSQL(::google::protobuf::RpcController* controller,
                              const ::cpluscplustemplate::ParseSQLRequest* request,
                              ::cpluscplustemplate::ParseSQLResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace cpluscplustemplate
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cpluscplustemplate::ParseSQLRequest* Arena::CreateMaybeMessage< ::cpluscplustemplate::ParseSQLRequest >(Arena* arena) {
  return Arena::CreateInternal< ::cpluscplustemplate::ParseSQLRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cpluscplustemplate::ParseSQLResponse* Arena::CreateMaybeMessage< ::cpluscplustemplate::ParseSQLResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cpluscplustemplate::ParseSQLResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
